name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]  
        dotnet-version: [7.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies (Nuxt 3)
        run: |
          cd Source/WebApp
          npm ci

      - name: Build Nuxt 3 app
        run: |
          cd Source/WebApp
          npm run build
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuxt3-build
          path: ./Source/WebApp/.output
          retention-days: 30
          include-hidden-files: true

      - name: Set up .NET 7
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore dependencies (.NET)
        run: dotnet restore

      - name: Build .NET API
        run: dotnet publish --configuration Release --output ./publish --no-restore

       # Upload the published files as an artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-api-publish
          path: ./publish
          retention-days: 30
          
      # Step 1: Download the build artifact
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: nuxt3-build

      # Step 2: Add SSH key to the agent
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 3: Copy files to the server using SCP
      - name: Copy files via SCP
        run: scp -r .output/* ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }}:/path/to/your/deployment/folder

      # Step 4: Run a script on the server to start the app (optional)
      - name: Restart server process
        run: ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} 'bash -s' < ./deploy/restart.sh
