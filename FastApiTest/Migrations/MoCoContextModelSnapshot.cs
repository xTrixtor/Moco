// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Moco.Api.Migrations
{
    [DbContext(typeof(MoCoContext))]
    partial class MoCoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Moco.Api.Models.Moco.Resource.CheckableFixedCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CostInspectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FixedCostId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CostInspectionId");

                    b.HasIndex("FixedCostId");

                    b.ToTable("CheckableFixedCosts");
                });

            modelBuilder.Entity("Moco.Api.Models.Moco.Resource.CostInspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserYearMonthKey")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserYearMonthKey")
                        .IsUnique();

                    b.ToTable("CostInspections");
                });

            modelBuilder.Entity("Moco.Api.Models.Moco.Resource.FixedCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GroupCostId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TimeInterval")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("GroupCostId");

                    b.ToTable("FixedCosts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupCostId = 1,
                            Name = "Miete",
                            TimeInterval = 3,
                            Value = 670.0
                        },
                        new
                        {
                            Id = 2,
                            GroupCostId = 1,
                            Name = "Strom",
                            TimeInterval = 3,
                            Value = 45.0
                        },
                        new
                        {
                            Id = 3,
                            GroupCostId = 2,
                            Name = "Renten Basis",
                            TimeInterval = 3,
                            Value = 250.0
                        },
                        new
                        {
                            Id = 4,
                            GroupCostId = 2,
                            Name = "Flexible",
                            TimeInterval = 3,
                            Value = 250.0
                        },
                        new
                        {
                            Id = 5,
                            GroupCostId = 3,
                            Name = "Versicherung",
                            TimeInterval = 6,
                            Value = 250.0
                        },
                        new
                        {
                            Id = 6,
                            GroupCostId = 3,
                            Name = "Kredit",
                            TimeInterval = 3,
                            Value = 244.0
                        });
                });

            modelBuilder.Entity("Moco.Api.Models.Moco.Resource.GroupCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("GroupCosts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wohnen",
                            UserId = "75097005-23ad-4e28-994b-91fdf414b205"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Investieren",
                            UserId = "75097005-23ad-4e28-994b-91fdf414b205"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Auto",
                            UserId = "75097005-23ad-4e28-994b-91fdf414b205"
                        });
                });

            modelBuilder.Entity("MocoApi.Models.Moco.Resource.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Limit")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Budgets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Limit = 300.0,
                            Name = "Haushalt",
                            UserId = "75097005-23ad-4e28-994b-91fdf414b205"
                        },
                        new
                        {
                            Id = 2,
                            Limit = 150.0,
                            Name = "Tanken",
                            UserId = "75097005-23ad-4e28-994b-91fdf414b205"
                        },
                        new
                        {
                            Id = 3,
                            Limit = 100.0,
                            Name = "Aktivität",
                            UserId = "75097005-23ad-4e28-994b-91fdf414b205"
                        },
                        new
                        {
                            Id = 4,
                            Limit = 100.0,
                            Name = "Luxus",
                            UserId = "75097005-23ad-4e28-994b-91fdf414b205"
                        });
                });

            modelBuilder.Entity("MocoApi.Models.Moco.Resource.Charge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<string>("ChargeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CostInspectionId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("CostInspectionId");

                    b.ToTable("Charges");
                });

            modelBuilder.Entity("MocoApi.Models.Moco.Resource.Revenue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Revenue");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Compoany",
                            UserId = "75097005-23ad-4e28-994b-91fdf414b205",
                            Value = 2500.2199999999998
                        });
                });

            modelBuilder.Entity("MocoApi.Models.Moco.Resource.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("KeycloakUserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email@gmx.de",
                            Firstname = "Nico",
                            KeycloakUserId = "75097005-23ad-4e28-994b-91fdf414b205",
                            LastName = "Böhner",
                            Username = "boehnern"
                        });
                });

            modelBuilder.Entity("Moco.Api.Models.Moco.Resource.CheckableFixedCost", b =>
                {
                    b.HasOne("Moco.Api.Models.Moco.Resource.CostInspection", "CostInspection")
                        .WithMany("CheckableFixedCosts")
                        .HasForeignKey("CostInspectionId");

                    b.HasOne("Moco.Api.Models.Moco.Resource.FixedCost", "FixedCost")
                        .WithMany()
                        .HasForeignKey("FixedCostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostInspection");

                    b.Navigation("FixedCost");
                });

            modelBuilder.Entity("Moco.Api.Models.Moco.Resource.FixedCost", b =>
                {
                    b.HasOne("Moco.Api.Models.Moco.Resource.GroupCost", "GroupCost")
                        .WithMany("FixedCosts")
                        .HasForeignKey("GroupCostId");

                    b.Navigation("GroupCost");
                });

            modelBuilder.Entity("MocoApi.Models.Moco.Resource.Charge", b =>
                {
                    b.HasOne("MocoApi.Models.Moco.Resource.Budget", "Budget")
                        .WithMany("Charges")
                        .HasForeignKey("BudgetId");

                    b.HasOne("Moco.Api.Models.Moco.Resource.CostInspection", "CostInspection")
                        .WithMany("BudgetCharges")
                        .HasForeignKey("CostInspectionId");

                    b.Navigation("Budget");

                    b.Navigation("CostInspection");
                });

            modelBuilder.Entity("Moco.Api.Models.Moco.Resource.CostInspection", b =>
                {
                    b.Navigation("BudgetCharges");

                    b.Navigation("CheckableFixedCosts");
                });

            modelBuilder.Entity("Moco.Api.Models.Moco.Resource.GroupCost", b =>
                {
                    b.Navigation("FixedCosts");
                });

            modelBuilder.Entity("MocoApi.Models.Moco.Resource.Budget", b =>
                {
                    b.Navigation("Charges");
                });
#pragma warning restore 612, 618
        }
    }
}
